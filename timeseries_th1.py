# -*- coding: utf-8 -*-
"""Bản sao của TimeSeries_TH1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S36kUohTPuz4UHLCMAzZv6ORX5zmevUp
"""

pip install pykalman

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from pykalman import KalmanFilter

file_path = "/content/train.csv"
df = pd.read_csv(file_path)

df.info(), df.head()

# Kiểm tra số lượng giá trị thiếu trong từng cột của file gốc
missing_values = df.isnull().sum()
missing_values

# Xử lý giá trị thiếu
df = pd.read_csv('train.csv')
df['Episode_Length_minutes'].fillna(df['Episode_Length_minutes'].mean(), inplace=True)
df['Guest_Popularity_percentage'].fillna(df['Guest_Popularity_percentage'].mean(), inplace=True)
df['Number_of_Ads'].fillna(df['Number_of_Ads'].mean(), inplace=True)

# Lọc dữ liệu theo thứ Sáu
df_friday = df[df['Publication_Day'] == 'Friday'].copy()
ts = df_friday['Listening_Time_minutes'].values

# Mô hình 1: Kalman Filter cơ bản (giá trị duy nhất)
kf1 = KalmanFilter(initial_state_mean=ts[0], n_dim_obs=1)
state_means1, _ = kf1.filter(ts)

plt.figure(figsize=(12, 6))
plt.plot(ts, color='gray', alpha=0.4, label='Original')
plt.plot(state_means1, label='Kalman Basic')
plt.title("Kalman Basic Filter on Listening Time (Friday only)")
plt.xlabel("Time Index")
plt.ylabel("Listening Time (minutes)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Mô hình 2: Kalman Filter với giả định có xu hướng tuyến tính (trend)
kf2 = KalmanFilter(
    transition_matrices=[1],
    observation_matrices=[1],
    initial_state_mean=ts[0],
    transition_covariance=1e-3,
    observation_covariance=1
)
state_means2, _ = kf2.filter(ts)

plt.figure(figsize=(12, 6))
plt.plot(ts, color='gray', alpha=0.4, label='Original')
plt.plot(state_means2, label='Kalman with Trend')
plt.title("Kalman Filter with Trend on Listening Time (Friday only)")
plt.xlabel("Time Index")
plt.ylabel("Listening Time (minutes)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Mô hình 3: Kalman Filter dạng State-Space (gồm mức độ và tốc độ thay đổi)
transition_matrix = [[1, 1], [0, 1]]
observation_matrix = [[1, 0]]
kf3 = KalmanFilter(
    transition_matrices=transition_matrix,
    observation_matrices=observation_matrix,
    initial_state_mean=[ts[0], 0],
    transition_covariance=0.01 * np.eye(2),
    observation_covariance=1.0
)
state_means3, _ = kf3.filter(ts)

# Mô hình 3
plt.figure(figsize=(12, 6))
plt.plot(ts, color='gray', alpha=0.4, label='Original')
plt.plot(state_means3[:, 0], label='Kalman State-Space (Level + Slope)')
plt.title("Kalman State-Space Filter (Level + Slope) on Listening Time (Friday only)")
plt.xlabel("Time Index")
plt.ylabel("Listening Time (minutes)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

